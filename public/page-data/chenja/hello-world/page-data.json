{"componentChunkName":"component---src-templates-blog-post-js","path":"/chenja/hello-world/","result":{"data":{"markdownRemark":{"html":"<p>Hello, this is an exciting post with three main points:</p>\n<ol>\n<li>You can format your content using <em>markdown</em></li>\n<li>You can refer to images</li>\n<li>You can include syntax highlighted code</li>\n</ol>\n<p><img src=\"https://i.ibb.co/dgFnpRt/image.png\"></p>\n<pre><code class=\"language-js\">console.log(`Hello world, 1 + 1 = ${1 + 1}`);\n</code></pre>\n<p>gatsby-example-using-remark\nUsing Excerpts\n1 min read · tagged remark, excerpts</p>\n<p>Contents\ngatsby-transformer-remark allows you to get an excerpt from a markdown post. By default, it will prune the first 140 characters, but you can optionally specify a pruneLength in the graphql query.</p>\n<p>{\nallMarkdownRemark {\nedges {\nnode {\nexcerpt(pruneLength: 280)\n}\n}\n}\n}\nYou can also manually mark in your markdown where to stop excerpting—similar to Jekyll. gatsby-transformer-remark uses gray-matter to parse markdown frontmatter, so you can specify an excerpt_separator, as well as any of the other options mentioned here, in the gatsby-config.js file.</p>\n<p>{\n\"resolve\": <code>gatsby-transformer-remark</code>,\n\"options\": {\n\"excerpt<em>separator\": <code>&#x3C;!-- end --></code>\n}\n}\nAny file that does not have the given excerpt</em>separator will fall back to the default pruning method.</p>\n<p>You can see the results here</p>\n<h3><a href=\"https://spriteye.me/posts/2019/09/gatsby-layout/\">style-componemts- 공부할것</a></h3>","frontmatter":{"title":"Hello World"}}},"pageContext":{"slug":"/chenja/hello-world/"}},"staticQueryHashes":["3159585216"]}